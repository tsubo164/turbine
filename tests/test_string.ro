[test]

# main(args []string) int

  ---
    - a = 42
    - b = 3.14
    - fmt = format("<%d, %g>", a, b)
    test.AssertS("<42, 3.14>", fmt)

  ---
    - b = 2.75
    - fmt = format("%g%%", b)
    test.AssertS("2.75%", fmt)

  ---
    - d = 42
    - x = 0xae
    - X = 0XF9
    - o = 022//18
    - O = 027
    - f = 6.04
    - s = "Hello"
    - fmt = format("%d, 0x%x, 0X%X, 0%o, 0%o %g, %s", d, x, X, o, O, f, s)
    test.AssertS("42, 0xae, 0XF9, 022, 027 6.04, Hello", fmt)

  ---
    - a = 42
    - f = 3.14159
    - fmt string

    // align left and width
    fmt = format("%-8d, %010g", a, f)
    test.AssertS("42      , 0003.14159", fmt)

    // plus sign and precision
    fmt = format("%-+8d, %010.3g", a, f)
    test.AssertS("+42     , 0000003.14", fmt)

    // positive number space
    fmt = format("%- 8d, %010.3g", a, f)
    test.AssertS(" 42     , 0000003.14", fmt)

    // char
    fmt = format("%c", 97)
    test.AssertS("a", fmt)

    // alternate
    fmt = format("%#x, %#X", a, a)
    test.AssertS("0x2a, 0X2A", fmt)
    fmt = format("%#f, %#e, %#g", f, f, f)
    test.AssertS("3.141590, 3.141590e+00, 3.14159", fmt)


  print(test._test_count_, "tests done.")

  return 0
