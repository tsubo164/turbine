- test_count int

// asserts bool
# AssertB(expected bool, actual bool, $caller_line)
  test_count++

  if expected != actual
    print("error:", nil, $caller_line, nil, ": expected:", expected, "actual:", actual)
    exit(1)

// asserts int
# AssertI(expected int, actual int, $caller_line)
  test_count++

  if expected != actual
    print("error:", nil, $caller_line, nil, ": expected:", expected, "actual:", actual)
    exit(1)

# main() int

  ---
    - id int
    id = 114
    AssertI(125, id + 11)

  ---
    - i int = 19
    AssertI(19, i)

  ---
    AssertI(42, 39 + 3)

  ---
    - id int
    id = 0
    AssertI(114, id + 114)

  ---
    AssertI(4422, 3129 + 1293)

  ---
    AssertI(5533, 3129 + 1293+1111)

  ---
    AssertI(42, 20+22)

  ---
    - a int
    a = 12
    AssertI(12, a)

  ---
    - a int
    a = 11
    AssertI(11, a)

  ---
    AssertB(false, 12 == 11)

  // C++ test
  // ==========================================================================

  // switch with multi case values
  ---
    - n = 6
    - x = 0

    switch n
    case 1
      x = 11
    case 2, 3, 4
      x = 22
    case 13, 55, 6
      x = 99
    default
      x = 255
    AssertI(99, x)

  // switch with multi case values
  ---
    - n = 3
    - x = 0

    switch n
    case 1
      x = 11
    case 2, 3, 4
      x = 22
    case 13, 55, 6
      x = 99
    default
      x = 255
    AssertI(22, x)

  // bool default
  ---
    - b bool
    - c = true
    AssertB(true, b == false)
    AssertB(true, c != false)

  //------------------------------
  print(test_count, "tests done.")

  return 0
